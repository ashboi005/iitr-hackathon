"""Add gig system tables

Revision ID: 8553fbcd8693
Revises: 8f40078bf30a
Create Date: 2025-03-21 14:45:36.787243

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8553fbcd8693'
down_revision: Union[str, None] = '8f40078bf30a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company_balance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_balance_id'), 'company_balance', ['id'], unique=False)
    op.create_table('balances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clerkId', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['clerkId'], ['users.clerkId'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('clerkId')
    )
    op.create_index(op.f('ix_balances_id'), 'balances', ['id'], unique=False)
    op.create_table('gigs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('skills_needed', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('project_deadline', sa.DateTime(), nullable=True),
    sa.Column('milestones', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('milestone_payments', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('total_payment', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('employerClerkId', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['employerClerkId'], ['users.clerkId'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gigs_id'), 'gigs', ['id'], unique=False)
    op.create_index(op.f('ix_gigs_title'), 'gigs', ['title'], unique=False)
    op.create_table('active_gigs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gig_id', sa.Integer(), nullable=True),
    sa.Column('freelancerClerkId', sa.String(), nullable=True),
    sa.Column('employerClerkId', sa.String(), nullable=True),
    sa.Column('milestone_status', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('milestone_links', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employerClerkId'], ['users.clerkId'], ),
    sa.ForeignKeyConstraint(['freelancerClerkId'], ['users.clerkId'], ),
    sa.ForeignKeyConstraint(['gig_id'], ['gigs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_active_gigs_employerClerkId'), 'active_gigs', ['employerClerkId'], unique=False)
    op.create_index(op.f('ix_active_gigs_freelancerClerkId'), 'active_gigs', ['freelancerClerkId'], unique=False)
    op.create_index(op.f('ix_active_gigs_gig_id'), 'active_gigs', ['gig_id'], unique=False)
    op.create_index(op.f('ix_active_gigs_id'), 'active_gigs', ['id'], unique=False)
    op.create_table('gig_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gig_id', sa.Integer(), nullable=True),
    sa.Column('freelancerClerkId', sa.String(), nullable=True),
    sa.Column('employerClerkId', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employerClerkId'], ['users.clerkId'], ),
    sa.ForeignKeyConstraint(['freelancerClerkId'], ['users.clerkId'], ),
    sa.ForeignKeyConstraint(['gig_id'], ['gigs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gig_requests_employerClerkId'), 'gig_requests', ['employerClerkId'], unique=False)
    op.create_index(op.f('ix_gig_requests_freelancerClerkId'), 'gig_requests', ['freelancerClerkId'], unique=False)
    op.create_index(op.f('ix_gig_requests_gig_id'), 'gig_requests', ['gig_id'], unique=False)
    op.create_index(op.f('ix_gig_requests_id'), 'gig_requests', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_gig_requests_id'), table_name='gig_requests')
    op.drop_index(op.f('ix_gig_requests_gig_id'), table_name='gig_requests')
    op.drop_index(op.f('ix_gig_requests_freelancerClerkId'), table_name='gig_requests')
    op.drop_index(op.f('ix_gig_requests_employerClerkId'), table_name='gig_requests')
    op.drop_table('gig_requests')
    op.drop_index(op.f('ix_active_gigs_id'), table_name='active_gigs')
    op.drop_index(op.f('ix_active_gigs_gig_id'), table_name='active_gigs')
    op.drop_index(op.f('ix_active_gigs_freelancerClerkId'), table_name='active_gigs')
    op.drop_index(op.f('ix_active_gigs_employerClerkId'), table_name='active_gigs')
    op.drop_table('active_gigs')
    op.drop_index(op.f('ix_gigs_title'), table_name='gigs')
    op.drop_index(op.f('ix_gigs_id'), table_name='gigs')
    op.drop_table('gigs')
    op.drop_index(op.f('ix_balances_id'), table_name='balances')
    op.drop_table('balances')
    op.drop_index(op.f('ix_company_balance_id'), table_name='company_balance')
    op.drop_table('company_balance')
    # ### end Alembic commands ###
